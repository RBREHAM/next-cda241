name: Docker Deployment pipeline

on: [push]

jobs:
  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image (linux/amd64)
        run: |
          docker build --platform linux/amd64 -t ghcr.io/rbreham/next-cda241/next-app:latest .

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/rbreham/next-cda241/next-app:latest

  build-deploy-dev:
    runs-on: ubuntu-latest
    environment:
      name: test
    if: 
      github.ref_name == 'develop'
    needs: build-docker
    steps:
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa_dev.pem
          chmod 600 ~/.ssh/id_rsa_dev.pem

      - name: Add host to known_hosts
        run: |
          ssh-keyscan -T 240 -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Remote SSH deploy
        run: |
            ssh -i ~/.ssh/id_rsa_dev.pem ubuntu@ec2-13-216-58-120.compute-1.amazonaws.com << EOF
                cd dev
                git pull origin develop
                sudo docker-compose pull
                sudo docker-compose -f docker-compose.yml up -d
            EOF

  build-deploy-prod:
    runs-on: ubuntu-latest
    if: 
      github.ref_name == 'master'
    needs: build-docker
    environment:
      name: prod
    steps:
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa_prod.pem
          chmod 600 ~/.ssh/id_rsa_prod.pem
          touch ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          cat ~/.ssh/known_hosts
      - name: Add host to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Remote SSH deploy
        env:
          GHCR_PAT: ${{ secrets.GHCR_PAT_PROD }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa_prod.pem ubuntu@ec2-13-216-58-120.compute-1.amazonaws.com <<EOF
            echo "${GHCR_PAT}" | sudo docker login ghcr.io -u RBREHAM --password-stdin
            cd prod
            git pull origin master
            sudo docker-compose -f docker-compose.prod.yml pull
            sudo docker-compose -f docker-compose.prod.yml up -d --force-recreate
          EOF